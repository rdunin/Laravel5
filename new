[33mcommit f9175578f3c030ecef165e1120bc8c04945bf44b[m
Author: Roman <romandunin@gmail.com>
Date:   Tue Jan 26 12:52:02 2016 +0000

    First commit Laravel

[1mdiff --git a/.env.example b/.env.example[m
[1mnew file mode 100644[m
[1mindex 0000000..4eb0845[m
[1m--- /dev/null[m
[1m+++ b/.env.example[m
[36m@@ -0,0 +1,11 @@[m
[32m+[m[32mAPP_ENV=local[m
[32m+[m[32mAPP_DEBUG=true[m
[32m+[m[32mAPP_KEY=SomeRandomString[m
[32m+[m
[32m+[m[32mDB_HOST=localhost[m
[32m+[m[32mDB_DATABASE=homestead[m
[32m+[m[32mDB_USERNAME=homestead[m
[32m+[m[32mDB_PASSWORD=secret[m
[32m+[m
[32m+[m[32mCACHE_DRIVER=file[m
[32m+[m[32mSESSION_DRIVER=file[m
[1mdiff --git a/.gitattributes b/.gitattributes[m
[1mnew file mode 100644[m
[1mindex 0000000..176a458[m
[1m--- /dev/null[m
[1m+++ b/.gitattributes[m
[36m@@ -0,0 +1 @@[m
[32m+[m[32m* text=auto[m
[1mdiff --git a/.gitignore b/.gitignore[m
[1mnew file mode 100644[m
[1mindex 0000000..c47965c[m
[1m--- /dev/null[m
[1m+++ b/.gitignore[m
[36m@@ -0,0 +1,3 @@[m
[32m+[m[32m/vendor[m
[32m+[m[32m/node_modules[m
[32m+[m[32m.env[m
[1mdiff --git a/README.md b/README.md[m
[1mnew file mode 100644[m
[1mindex 0000000..3ad9a2a[m
[1m--- /dev/null[m
[1m+++ b/README.md[m
[36m@@ -0,0 +1 @@[m
[32m+[m[32m# Laravel5[m
[1mdiff --git a/app/Commands/Command.php b/app/Commands/Command.php[m
[1mnew file mode 100644[m
[1mindex 0000000..018bc21[m
[1m--- /dev/null[m
[1m+++ b/app/Commands/Command.php[m
[36m@@ -0,0 +1,7 @@[m
[32m+[m[32m<?php namespace App\Commands;[m
[32m+[m
[32m+[m[32mabstract class Command {[m
[32m+[m
[32m+[m	[32m//[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/app/Console/Commands/Inspire.php b/app/Console/Commands/Inspire.php[m
[1mnew file mode 100644[m
[1mindex 0000000..abb255d[m
[1m--- /dev/null[m
[1m+++ b/app/Console/Commands/Inspire.php[m
[36m@@ -0,0 +1,34 @@[m
[32m+[m[32m<?php namespace App\Console\Commands;[m
[32m+[m
[32m+[m[32muse Illuminate\Console\Command;[m
[32m+[m[32muse Illuminate\Foundation\Inspiring;[m
[32m+[m[32muse Symfony\Component\Console\Input\InputOption;[m
[32m+[m[32muse Symfony\Component\Console\Input\InputArgument;[m
[32m+[m
[32m+[m[32mclass Inspire extends Command {[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * The console command name.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @var string[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $name = 'inspire';[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * The console command description.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @var string[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $description = 'Display an inspiring quote';[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Execute the console command.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return mixed[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function handle()[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->comment(PHP_EOL.Inspiring::quote().PHP_EOL);[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/app/Console/Kernel.php b/app/Console/Kernel.php[m
[1mnew file mode 100644[m
[1mindex 0000000..0c088c8[m
[1m--- /dev/null[m
[1m+++ b/app/Console/Kernel.php[m
[36m@@ -0,0 +1,29 @@[m
[32m+[m[32m<?php namespace App\Console;[m
[32m+[m
[32m+[m[32muse Illuminate\Console\Scheduling\Schedule;[m
[32m+[m[32muse Illuminate\Foundation\Console\Kernel as ConsoleKernel;[m
[32m+[m
[32m+[m[32mclass Kernel extends ConsoleKernel {[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * The Artisan commands provided by your application.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @var array[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $commands = [[m
[32m+[m		[32m'App\Console\Commands\Inspire',[m
[32m+[m	[32m];[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Define the application's command schedule.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param  \Illuminate\Console\Scheduling\Schedule  $schedule[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected function schedule(Schedule $schedule)[m
[32m+[m	[32m{[m
[32m+[m		[32m$schedule->command('inspire')[m
[32m+[m				[32m ->hourly();[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/app/Events/Event.php b/app/Events/Event.php[m
[1mnew file mode 100644[m
[1mindex 0000000..d59f769[m
[1m--- /dev/null[m
[1m+++ b/app/Events/Event.php[m
[36m@@ -0,0 +1,7 @@[m
[32m+[m[32m<?php namespace App\Events;[m
[32m+[m
[32m+[m[32mabstract class Event {[m
[32m+[m
[32m+[m	[32m//[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/app/Exceptions/Handler.php b/app/Exceptions/Handler.php[m
[1mnew file mode 100644[m
[1mindex 0000000..ca5215b[m
[1m--- /dev/null[m
[1m+++ b/app/Exceptions/Handler.php[m
[36m@@ -0,0 +1,49 @@[m
[32m+[m[32m<?php namespace App\Exceptions;[m
[32m+[m
[32m+[m[32muse Exception;[m
[32m+[m[32muse Illuminate\Foundation\Exceptions\Handler as ExceptionHandler;[m
[32m+[m
[32m+[m[32mclass Handler extends ExceptionHandler {[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * A list of the exception types that should not be reported.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @var array[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $dontReport = [[m
[32m+[m		[32m'Symfony\Component\HttpKernel\Exception\HttpException'[m
[32m+[m	[32m];[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Report or log an exception.[m
[32m+[m	[32m *[m
[32m+[m	[32m * This is a great spot to send exceptions to Sentry, Bugsnag, etc.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param  \Exception  $e[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function report(Exception $e)[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn parent::report($e);[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Render an exception into an HTTP response.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param  \Illuminate\Http\Request  $request[m
[32m+[m	[32m * @param  \Exception  $e[m
[32m+[m	[32m * @return \Illuminate\Http\Response[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function render($request, Exception $e)[m
[32m+[m	[32m{[m
[32m+[m		[32mif ($this->isHttpException($e))[m
[32m+[m		[32m{[m
[32m+[m			[32mreturn $this->renderHttpException($e);[m
[32m+[m		[32m}[m
[32m+[m		[32melse[m
[32m+[m		[32m{[m
[32m+[m			[32mreturn parent::render($request, $e);[m
[32m+[m		[32m}[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/app/Handlers/Commands/.gitkeep b/app/Handlers/Commands/.gitkeep[m
[1mnew file mode 100644[m
[1mindex 0000000..e69de29[m
[1mdiff --git a/app/Handlers/Events/.gitkeep b/app/Handlers/Events/.gitkeep[m
[1mnew file mode 100644[m
[1mindex 0000000..e69de29[m
[1mdiff --git a/app/Http/Controllers/Auth/AuthController.php b/app/Http/Controllers/Auth/AuthController.php[m
[1mnew file mode 100644[m
[1mindex 0000000..4ad5c58[m
[1m--- /dev/null[m
[1m+++ b/app/Http/Controllers/Auth/AuthController.php[m
[36m@@ -0,0 +1,38 @@[m
[32m+[m[32m<?php namespace App\Http\Controllers\Auth;[m
[32m+[m
[32m+[m[32muse App\Http\Controllers\Controller;[m
[32m+[m[32muse Illuminate\Contracts\Auth\Guard;[m
[32m+[m[32muse Illuminate\Contracts\Auth\Registrar;[m
[32m+[m[32muse Illuminate\Foundation\Auth\AuthenticatesAndRegistersUsers;[m
[32m+[m
[32m+[m[32mclass AuthController extends Controller {[m
[32m+[m
[32m+[m	[32m/*[m
[32m+[m	[32m|--------------------------------------------------------------------------[m
[32m+[m	[32m| Registration & Login Controller[m
[32m+[m	[32m|--------------------------------------------------------------------------[m
[32m+[m	[32m|[m
[32m+[m	[32m| This controller handles the registration of new users, as well as the[m
[32m+[m	[32m| authentication of existing users. By default, this controller uses[m
[32m+[m	[32m| a simple trait to add these behaviors. Why don't you explore it?[m
[32m+[m	[32m|[m
[32m+[m	[32m*/[m
[32m+[m
[32m+[m	[32muse AuthenticatesAndRegistersUsers;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Create a new authentication controller instance.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param  \Illuminate\Contracts\Auth\Guard  $auth[m
[32m+[m	[32m * @param  \Illuminate\Contracts\Auth\Registrar  $registrar[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function __construct(Guard $auth, Registrar $registrar)[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->auth = $auth;[m
[32m+[m		[32m$this->registrar = $registrar;[m
[32m+[m
[32m+[m		[32m$this->middleware('guest', ['except' => 'getLogout']);[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/app/Http/Controllers/Auth/PasswordController.php b/app/Http/Controllers/Auth/PasswordController.php[m
[1mnew file mode 100644[m
[1mindex 0000000..3106193[m
[1m--- /dev/null[m
[1m+++ b/app/Http/Controllers/Auth/PasswordController.php[m
[36m@@ -0,0 +1,38 @@[m
[32m+[m[32m<?php namespace App\Http\Controllers\Auth;[m
[32m+[m
[32m+[m[32muse App\Http\Controllers\Controller;[m
[32m+[m[32muse Illuminate\Contracts\Auth\Guard;[m
[32m+[m[32muse Illuminate\Contracts\Auth\PasswordBroker;[m
[32m+[m[32muse Illuminate\Foundation\Auth\ResetsPasswords;[m
[32m+[m
[32m+[m[32mclass PasswordController extends Controller {[m
[32m+[m
[32m+[m	[32m/*[m
[32m+[m	[32m|--------------------------------------------------------------------------[m
[32m+[m	[32m| Password Reset Controller[m
[32m+[m	[32m|--------------------------------------------------------------------------[m
[32m+[m	[32m|[m
[32m+[m	[32m| This controller is responsible for handling password reset requests[m
[32m+[m	[32m| and uses a simple trait to include this behavior. You're free to[m
[32m+[m	[32m| explore this trait and override any methods you wish to tweak.[m
[32m+[m	[32m|[m
[32m+[m	[32m*/[m
[32m+[m
[32m+[m	[32muse ResetsPasswords;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Create a new password controller instance.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param  \Illuminate\Contracts\Auth\Guard  $auth[m
[32m+[m	[32m * @param  \Illuminate\Contracts\Auth\PasswordBroker  $passwords[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function __construct(Guard $auth, PasswordBroker $passwords)[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->auth = $auth;[m
[32m+[m		[32m$this->passwords = $passwords;[m
[32m+[m
[32m+[m		[32m$this->middleware('guest');[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/app/Http/Controllers/Controller.php b/app/Http/Controllers/Controller.php[m
[1mnew file mode 100644[m
[1mindex 0000000..27b3f45[m
[1m--- /dev/null[m
[1m+++ b/app/Http/Controllers/Controller.php[m
[36m@@ -0,0 +1,11 @@[m
[32m+[m[32m<?php namespace App\Http\Controllers;[m
[32m+[m
[32m+[m[32muse Illuminate\Foundation\Bus\DispatchesCommands;[m
[32m+[m[32muse Illuminate\Routing\Controller as BaseController;[m
[32m+[m[32muse Illuminate\Foundation\Validation\ValidatesRequests;[m
[32m+[m
[32m+[m[32mabstract class Controller extends BaseController {[m
[32m+[m
[32m+[m	[32muse DispatchesCommands, ValidatesRequests;[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/app/Http/Controllers/HomeController.php b/app/Http/Controllers/HomeController.php[m
[1mnew file mode 100644[m
[1mindex 0000000..c7ca983[m
[1m--- /dev/null[m
[1m+++ b/app/Http/Controllers/HomeController.php[m
[36m@@ -0,0 +1,36 @@[m
[32m+[m[32m<?php namespace App\Http\Controllers;[m
[32m+[m
[32m+[m[32mclass HomeController extends Controller {[m
[32m+[m
[32m+[m	[32m/*[m
[32m+[m	[32m|--------------------------------------------------------------------------[m
[32m+[m	[32m| Home Controller[m
[32m+[m	[32m|--------------------------------------------------------------------------[m
[32m+[m	[32m|[m
[32m+[m	[32m| This controller renders your application's "dashboard" for users that[m
[32m+[m	[32m| are authenticated. Of course, you are free to change or remove the[m
[32m+[m	[32m| controller as you wish. It is just here to get your app started![m
[32m+[m	[32m|[m
[32m+[m	[32m*/[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Create a new controller instance.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function __construct()[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->middleware('auth');[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Show the application dashboard to the user.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return Response[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function index()[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn view('home');[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/app/Http/Controllers/PostController.php b/app/Http/Controllers/PostController.php[m
[1mnew file mode 100644[m
[1mindex 0000000..4199f23[m
[1m--- /dev/null[m
[1m+++ b/app/Http/Controllers/PostController.php[m
[36m@@ -0,0 +1,102 @@[m
[32m+[m[32m<?php namespace App\Http\Controllers;[m
[32m+[m
[32m+[m[32muse App\Http\Requests;[m
[32m+[m[32muse App\Http\Controllers\Controller;[m
[32m+[m
[32m+[m[32muse Illuminate\Http\Request;[m
[32m+[m[32muse App\Models\Post;[m
[32m+[m
[32m+[m[32muse Carbon\Carbon;[m
[32m+[m
[32m+[m[32mclass PostController extends Controller {[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Display a listing of the resource.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return Response[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function index(Post $postModel)[m
[32m+[m	[32m{[m
[32m+[m		[32m//$posts = Post::all();[m
[32m+[m		[32m//dd($posts);[m
[32m+[m		[32m// $posts = Post::latest('published_at')[m
[32m+[m		[32m// 	->where('published_at', '<=', Carbon::now())[m
[32m+[m		[32m// 	->get();[m
[32m+[m		[32m$posts = $postModel->getPublishedPosts();[m
[32m+[m[41m		[m
[32m+[m		[32mreturn view('post.index', ['posts' => $posts]);[m
[32m+[m	[32m}[m
[32m+[m[41m	[m
[32m+[m		[32mpublic function unpublished(Post $postModel)[m
[32m+[m	[32m{[m
[32m+[m	[32m    $posts = $postModel->getUnPublishedPosts();[m
[32m+[m	[32m    return view('post.index', ['posts' => $posts]);[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Show the form for creating a new resource.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return Response[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function create()[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn view('post.create');[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Store a newly created resource in storage.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return Response[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function store(Post $postModel, Request $request)[m
[32m+[m	[32m{[m
[32m+[m	[32m   $postModel->create($request->all());[m
[32m+[m[41m	   [m
[32m+[m[32m       return redirect()->route('posts');[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Display the specified resource.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param  int  $id[m
[32m+[m	[32m * @return Response[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function show($id)[m
[32m+[m	[32m{[m
[32m+[m		[32m//[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Show the form for editing the specified resource.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param  int  $id[m
[32m+[m	[32m * @return Response[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function edit($id)[m
[32m+[m	[32m{[m
[32m+[m		[32m//[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Update the specified resource in storage.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param  int  $id[m
[32m+[m	[32m * @return Response[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function update($id)[m
[32m+[m	[32m{[m
[32m+[m		[32m//[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Remove the specified resource from storage.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param  int  $id[m
[32m+[m	[32m * @return Response[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function destroy($id)[m
[32m+[m	[32m{[m
[32m+[m		[32m//[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/app/Http/Controllers/WelcomeController.php b/app/Http/Controllers/WelcomeController.php[m
[1mnew file mode 100644[m
[1mindex 0000000..8a5ac6d[m
[1m--- /dev/null[m
[1m+++ b/app/Http/Controllers/WelcomeController.php[m
[36m@@ -0,0 +1,36 @@[m
[32m+[m[32m<?php namespace App\Http\Controllers;[m
[32m+[m
[32m+[m[32mclass WelcomeController extends Controller {[m
[32m+[m
[32m+[m	[32m/*[m
[32m+[m	[32m|--------------------------------------------------------------------------[m
[32m+[m	[32m| Welcome Controller[m
[32m+[m	[32m|--------------------------------------------------------------------------[m
[32m+[m	[32m|[m
[32m+[m	[32m| This controller renders the "marketing page" for the application and[m
[32m+[m	[32m| is configured to only allow guests. Like most of the other sample[m
[32m+[m	[32m| controllers, you are free to modify or remove it as you desire.[m
[32m+[m	[32m|[m
[32m+[m	[32m*/[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Create a new controller instance.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function __construct()[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->middleware('guest');[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Show the application welcome screen to the user.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return Response[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function index()[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn view('welcome');[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/app/Http/Kernel.php b/app/Http/Kernel.php[m
[1mnew file mode 100644[m
[1mindex 0000000..0a2addc[m
[1m--- /dev/null[m
[1m+++ b/app/Http/Kernel.php[m
[36m@@ -0,0 +1,32 @@[m
[32m+[m[32m<?php namespace App\Http;[m
[32m+[m
[32m+[m[32muse Illuminate\Foundation\Http\Kernel as HttpKernel;[m
[32m+[m
[32m+[m[32mclass Kernel extends HttpKernel {[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * The application's global HTTP middleware stack.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @var array[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $middleware = [[m
[32m+[m		[32m'Illuminate\Foundation\Http\Middleware\CheckForMaintenanceMode',[m
[32m+[m		[32m'Illuminate\Cookie\Middleware\EncryptCookies',[m
[32m+[m		[32m'Illuminate\Cookie\Middleware\AddQueuedCookiesToResponse',[m
[32m+[m		[32m'Illuminate\Session\Middleware\StartSession',[m
[32m+[m		[32m'Illuminate\View\Middleware\ShareErrorsFromSession',[m
[32m+[m		[32m'App\Http\Middleware\VerifyCsrfToken',[m
[32m+[m	[32m];[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * The application's route middleware.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @var array[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $routeMiddleware = [[m
[32m+[m		[32m'auth' => 'App\Http\Middleware\Authenticate',[m
[32m+[m		[32m'auth.basic' => 'Illuminate\Auth\Middleware\AuthenticateWithBasicAuth',[m
[32m+[m		[32m'guest' => 'App\Http\Middleware\RedirectIfAuthenticated',[m
[32m+[m	[32m];[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/app/Http/Middleware/Authenticate.php b/app/Http/Middleware/Authenticate.php[m
[1mnew file mode 100644[m
[1mindex 0000000..72a7613[m
[1m--- /dev/null[m
[1m+++ b/app/Http/Middleware/Authenticate.php[m
[36m@@ -0,0 +1,50 @@[m
[32m+[m[32m<?php namespace App\Http\Middleware;[m
[32m+[m
[32m+[m[32muse Closure;[m
[32m+[m[32muse Illuminate\Contracts\Auth\Guard;[m
[32m+[m
[32m+[m[32mclass Authenticate {[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * The Guard implementation.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @var Guard[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $auth;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Create a new filter instance.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param  Guard  $auth[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function __construct(Guard $auth)[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->auth = $auth;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Handle an incoming request.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param  \Illuminate\Http\Request  $request[m
[32m+[m	[32m * @param  \Closure  $next[m
[32m+[m	[32m * @return mixed[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function handle($request, Closure $next)[m
[32m+[m	[32m{[m
[32m+[m		[32mif ($this->auth->guest())[m
[32m+[m		[32m{[m
[32m+[m			[32mif ($request->ajax())[m
[32m+[m			[32m{[m
[32m+[m				[32mreturn response('Unauthorized.', 401);[m
[32m+[m			[32m}[m
[32m+[m			[32melse[m
[32m+[m			[32m{[m
[32m+[m				[32mreturn redirect()->guest('auth/login');[m
[32m+[m			[32m}[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mreturn $next($request);[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/app/Http/Middleware/RedirectIfAuthenticated.php b/app/Http/Middleware/RedirectIfAuthenticated.php[m
[1mnew file mode 100644[m
[1mindex 0000000..dd5a867[m
[1m--- /dev/null[m
[1m+++ b/app/Http/Middleware/RedirectIfAuthenticated.php[m
[36m@@ -0,0 +1,44 @@[m
[32m+[m[32m<?php namespace App\Http\Middleware;[m
[32m+[m
[32m+[m[32muse Closure;[m
[32m+[m[32muse Illuminate\Contracts\Auth\Guard;[m
[32m+[m[32muse Illuminate\Http\RedirectResponse;[m
[32m+[m
[32m+[m[32mclass RedirectIfAuthenticated {[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * The Guard implementation.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @var Guard[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $auth;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Create a new filter instance.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param  Guard  $auth[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function __construct(Guard $auth)[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->auth = $auth;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Handle an incoming request.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param  \Illuminate\Http\Request  $request[m
[32m+[m	[32m * @param  \Closure  $next[m
[32m+[m	[32m * @return mixed[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function handle($request, Closure $next)[m
[32m+[m	[32m{[m
[32m+[m		[32mif ($this->auth->check())[m
[32m+[m		[32m{[m
[32m+[m			[32mreturn new RedirectResponse(url('/home'));[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mreturn $next($request);[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/app/Http/Middleware/VerifyCsrfToken.php b/app/Http/Middleware/VerifyCsrfToken.php[m
[1mnew file mode 100644[m
[1mindex 0000000..750a39b[m
[1m--- /dev/null[m
[1m+++ b/app/Http/Middleware/VerifyCsrfToken.php[m
[36m@@ -0,0 +1,20 @@[m
[32m+[m[32m<?php namespace App\Http\Middleware;[m
[32m+[m
[32m+[m[32muse Closure;[m
[32m+[m[32muse Illuminate\Foundation\Http\Middleware\VerifyCsrfToken as BaseVerifier;[m
[32m+[m
[32m+[m[32mclass VerifyCsrfToken extends BaseVerifier {[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Handle an incoming request.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param  \Illuminate\Http\Request  $request[m
[32m+[m	[32m * @param  \Closure  $next[m
[32m+[m	[32m * @return mixed[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function handle($request, Closure $next)[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn parent::handle($request, $next);[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/app/Http/Requests/Request.php b/app/Http/Requests/Request.php[m
[1mnew file mode 100644[m
[1mindex 0000000..4516ab2[m
[1m--- /dev/null[m
[1m+++ b/app/Http/Requests/Request.php[m
[36m@@ -0,0 +1,9 @@[m
[32m+[m[32m<?php namespace App\Http\Requests;[m
[32m+[m
[32m+[m[32muse Illuminate\Foundation\Http\FormRequest;[m
[32m+[m
[32m+[m[32mabstract class Request extends FormRequest {[m
[32m+[m
[32m+[m	[32m//[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/app/Http/routes.php b/app/Http/routes.php[m
[1mnew file mode 100644[m
[1mindex 0000000..2853046[m
[1m--- /dev/null[m
[1m+++ b/app/Http/routes.php[m
[36m@@ -0,0 +1,38 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32m/*[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m| Application Routes[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m|[m
[32m+[m[32m| Here is where you can register all of the routes for an application.[m
[32m+[m[32m| It's a breeze. Simply tell Laravel the URIs it should respond to[m
[32m+[m[32m| and give it the controller to call when that URI is requested.[m
[32m+[m[32m|[m
[32m+[m[32m*/[m
[32m+[m
[32m+[m
[32m+[m[32m//Route::get('/', 'WelcomeController@index');[m
[32m+[m
[32m+[m[32mRoute::get('home', 'HomeController@index');[m
[32m+[m
[32m+[m[32mRoute::controllers([[m
[32m+[m	[32m'auth' => 'Auth\AuthController',[m
[32m+[m	[32m'password' => 'Auth\PasswordController',[m
[32m+[m[32m]);[m
[32m+[m
[32m+[m[32mget('/', [[m
[32m+[m[32m    'as' => 'posts', 'uses' => 'PostController@index'[m
[32m+[m[32m]);[m
[32m+[m
[32m+[m[32mget('unpublished', [[m
[32m+[m[32m    'as' => 'posts.unpublished', 'uses' => 'PostController@unpublished'[m
[32m+[m[32m]);[m
[32m+[m
[32m+[m[32m// get('post/create', ['as' => 'post.create', 'uses' => 'PostController@create']);[m
[32m+[m[32m// post('post', ['as' => 'post.store',  'uses' => 'PostController@store']);[m
[32m+[m[32m// get('post/{post}', ['as' => 'post.show',   'uses' => 'PostController@show']);[m
[32m+[m[32m// get('post/{post}/edit', ['as' => 'post.edit',   'uses' => 'PostController@edit']);[m
[32m+[m[32m// post('post/{post}', ['as' => 'post.update', 'uses' => 'PostController@update']);[m
[32m+[m
[32m+[m[32m$router->resource('post', 'PostController');[m
\ No newline at end of file[m
[1mdiff --git a/app/Models/Post.php b/app/Models/Post.php[m
[1mnew file mode 100644[m
[1mindex 0000000..b548ca3[m
[1m--- /dev/null[m
[1m+++ b/app/Models/Post.php[m
[36m@@ -0,0 +1,41 @@[m
[32m+[m[32m<?php namespace App\Models;[m
[32m+[m
[32m+[m[32muse Illuminate\Database\Eloquent\Model;[m
[32m+[m[32muse Carbon\Carbon;[m
[32m+[m
[32m+[m[32mclass Post extends Model {[m
[32m+[m
[32m+[m	[32m   // public function getPublishedPosts()[m
[32m+[m[32m    // {[m
[32m+[m[32m    //     $posts = Post::latest('published_at')[m
[32m+[m[32m    //             ->where('published_at', '<=', Carbon::now())[m
[32m+[m[32m    //             ->get();[m
[32m+[m[41m    [m
[32m+[m[32m    //     return $posts;[m
[32m+[m[32m    // }[m
[32m+[m[41m    [m
[32m+[m[32m        public function getPublishedPosts()[m
[32m+[m[32m    {[m
[32m+[m[32m        $posts = $this->latest('published_at')->published()->get();[m
[32m+[m[41m        [m
[32m+[m[32m        return $posts;[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m        public function scopePublished($query)[m
[32m+[m[32m    {[m
[32m+[m[32m        $query->where('published_at', '<=', Carbon::now())[m
[32m+[m[32m            ->where('published', '=', 1);[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m        public function getUnPublishedPosts()[m
[32m+[m[32m    {[m
[32m+[m[32m        return $this->latest('published_at')->unPublished()->get();[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m        public function scopeUnPublished($query)[m
[32m+[m[32m    {[m
[32m+[m[32m        $query->where('published_at', '=>', Carbon::now())[m
[32m+[m[32m            ->orWhere('published', '=', 0);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/app/Models/User.php b/app/Models/User.php[m
[1mnew file mode 100644[m
[1mindex 0000000..2dae847[m
[1m--- /dev/null[m
[1m+++ b/app/Models/User.php[m
[36m@@ -0,0 +1,34 @@[m
[32m+[m[32m<?php namespace App;[m
[32m+[m
[32m+[m[32muse Illuminate\Auth\Authenticatable;[m
[32m+[m[32muse Illuminate\Database\Eloquent\Model;[m
[32m+[m[32muse Illuminate\Auth\Passwords\CanResetPassword;[m
[32m+[m[32muse Illuminate\Contracts\Auth\Authenticatable as AuthenticatableContract;[m
[32m+[m[32muse Illuminate\Contracts\Auth\CanResetPassword as CanResetPasswordContract;[m
[32m+[m
[32m+[m[32mclass User extends Model implements AuthenticatableContract, CanResetPasswordContract {[m
[32m+[m
[32m+[m	[32muse Authenticatable, CanResetPassword;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * The database table used by the model.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @var string[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $table = 'users';[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * The attributes that are mass assignable.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @var array[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $fillable = ['name', 'email', 'password'];[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * The attributes excluded from the model's JSON form.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @var array[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $hidden = ['password', 'remember_token'];[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/app/Providers/AppServiceProvider.php b/app/Providers/AppServiceProvider.php[m
[1mnew file mode 100644[m
[1mindex 0000000..ff9d6f6[m
[1m--- /dev/null[m
[1m+++ b/app/Providers/AppServiceProvider.php[m
[36m@@ -0,0 +1,34 @@[m
[32m+[m[32m<?php namespace App\Providers;[m
[32m+[m
[32m+[m[32muse Illuminate\Support\ServiceProvider;[m
[32m+[m
[32m+[m[32mclass AppServiceProvider extends ServiceProvider {[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Bootstrap any application services.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function boot()[m
[32m+[m	[32m{[m
[32m+[m		[32m//[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Register any application services.[m
[32m+[m	[32m *[m
[32m+[m	[32m * This service provider is a great spot to register your various container[m
[32m+[m	[32m * bindings with the application. As you can see, we are registering our[m
[32m+[m	[32m * "Registrar" implementation here. You can add your own bindings too![m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function register()[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->app->bind([m
[32m+[m			[32m'Illuminate\Contracts\Auth\Registrar',[m
[32m+[m			[32m'App\Services\Registrar'[m
[32m+[m		[32m);[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/app/Providers/BusServiceProvider.php b/app/Providers/BusServiceProvider.php[m
[1mnew file mode 100644[m
[1mindex 0000000..f0d9be6[m
[1m--- /dev/null[m
[1m+++ b/app/Providers/BusServiceProvider.php[m
[36m@@ -0,0 +1,34 @@[m
[32m+[m[32m<?php namespace App\Providers;[m
[32m+[m
[32m+[m[32muse Illuminate\Bus\Dispatcher;[m
[32m+[m[32muse Illuminate\Support\ServiceProvider;[m
[32m+[m
[32m+[m[32mclass BusServiceProvider extends ServiceProvider {[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Bootstrap any application services.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param  \Illuminate\Bus\Dispatcher  $dispatcher[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function boot(Dispatcher $dispatcher)[m
[32m+[m	[32m{[m
[32m+[m		[32m$dispatcher->mapUsing(function($command)[m
[32m+[m		[32m{[m
[32m+[m			[32mreturn Dispatcher::simpleMapping([m
[32m+[m				[32m$command, 'App\Commands', 'App\Handlers\Commands'[m
[32m+[m			[32m);[m
[32m+[m		[32m});[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Register any application services.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function register()[m
[32m+[m	[32m{[m
[32m+[m		[32m//[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/app/Providers/ConfigServiceProvider.php b/app/Providers/ConfigServiceProvider.php[m
[1mnew file mode 100644[m
[1mindex 0000000..06e5799[m
[1m--- /dev/null[m
[1m+++ b/app/Providers/ConfigServiceProvider.php[m
[36m@@ -0,0 +1,23 @@[m
[32m+[m[32m<?php namespace App\Providers;[m
[32m+[m
[32m+[m[32muse Illuminate\Support\ServiceProvider;[m
[32m+[m
[32m+[m[32mclass ConfigServiceProvider extends ServiceProvider {[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Overwrite any vendor / package configuration.[m
[32m+[m	[32m *[m
[32m+[m	[32m * This service provider is intended to provide a convenient location for you[m
[32m+[m	[32m * to overwrite any "vendor" or package configuration that you may want to[m
[32m+[m	[32m * modify before the application handles the incoming request / command.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function register()[m
[32m+[m	[32m{[m
[32m+[m		[32mconfig([[m
[32m+[m			[32m//[m
[32m+[m		[32m]);[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/app/Providers/EventServiceProvider.php b/app/Providers/EventServiceProvider.php[m
[1mnew file mode 100644[m
[1mindex 0000000..1cece99[m
[1m--- /dev/null[m
[1m+++ b/app/Providers/EventServiceProvider.php[m
[36m@@ -0,0 +1,32 @@[m
[32m+[m[32m<?php namespace App\Providers;[m
[32m+[m
[32m+[m[32muse Illuminate\Contracts\Events\Dispatcher as DispatcherContract;[m
[32m+[m[32muse Illuminate\Foundation\Support\Providers\EventServiceProvider as ServiceProvider;[m
[32m+[m
[32m+[m[32mclass EventServiceProvider extends ServiceProvider {[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * The event handler mappings for the application.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @var array[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $listen = [[m
[32m+[m		[32m'event.name' => [[m
[32m+[m			[32m'EventListener',[m
[32m+[m		[32m],[m
[32m+[m	[32m];[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Register any other events for your application.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param  \Illuminate\Contracts\Events\Dispatcher  $events[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function boot(DispatcherContract $events)[m
[32m+[m	[32m{[m
[32m+[m		[32mparent::boot($events);[m
[32m+[m
[32m+[m		[32m//[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/app/Providers/RouteServiceProvider.php b/app/Providers/RouteServiceProvider.php[m
[1mnew file mode 100644[m
[1mindex 0000000..afa34c8[m
[1m--- /dev/null[m
[1m+++ b/app/Providers/RouteServiceProvider.php[m
[36m@@ -0,0 +1,44 @@[m
[32m+[m[32m<?php namespace App\Providers;[m
[32m+[m
[32m+[m[32muse Illuminate\Routing\Router;[m
[32m+[m[32muse Illuminate\Foundation\Support\Providers\RouteServiceProvider as ServiceProvider;[m
[32m+[m
[32m+[m[32mclass RouteServiceProvider extends ServiceProvider {[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * This namespace is applied to the controller routes in your routes file.[m
[32m+[m	[32m *[m
[32m+[m	[32m * In addition, it is set as the URL generator's root namespace.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @var string[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $namespace = 'App\Http\Controllers';[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Define your route model bindings, pattern filters, etc.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param  \Illuminate\Routing\Router  $router[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function boot(Router $router)[m
[32m+[m	[32m{[m
[32m+[m		[32mparent::boot($router);[m
[32m+[m
[32m+[m		[32m//[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Define the routes for the application.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param  \Illuminate\Routing\Router  $router[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function map(Router $router)[m
[32m+[m	[32m{[m
[32m+[m		[32m$router->group(['namespace' => $this->namespace], function($router)[m
[32m+[m		[32m{[m
[32m+[m			[32mrequire app_path('Http/routes.php');[m
[32m+[m		[32m});[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/app/Services/Registrar.php b/app/Services/Registrar.php[m
[1mnew file mode 100644[m
[1mindex 0000000..1035468[m
[1m--- /dev/null[m
[1m+++ b/app/Services/Registrar.php[m
[36m@@ -0,0 +1,39 @@[m
[32m+[m[32m<?php namespace App\Services;[m
[32m+[m
[32m+[m[32muse App\User;[m
[32m+[m[32muse Validator;[m
[32m+[m[32muse Illuminate\Contracts\Auth\Registrar as RegistrarContract;[m
[32m+[m
[32m+[m[32mclass Registrar implements RegistrarContract {[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Get a validator for an incoming registration request.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param  array  $data[m
[32m+[m	[32m * @return \Illuminate\Contracts\Validation\Validator[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function validator(array $data)[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn Validator::make($data, [[m
[32m+[m			[32m'name' => 'required|max:255',[m
[32m+[m			[32m'email' => 'required|email|max:255|unique:users',[m
[32m+[m			[32m'password' => 'required|confirmed|min:6',[m
[32m+[m		[32m]);[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Create a new user instance after a valid registration.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param  array  $data[m
[32m+[m	[32m * @return User[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function create(array $data)[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn User::create([[m
[32m+[m			[32m'name' => $data['name'],[m
[32m+[m			[32m'email' => $data['email'],[m
[32m+[m			[32m'password' => bcrypt($data['password']),[m
[32m+[m		[32m]);[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/artisan b/artisan[m
[1mnew file mode 100755[m
[1mindex 0000000..eb5e2bb[m
[1m--- /dev/null[m
[1m+++ b/artisan[m
[36m@@ -0,0 +1,51 @@[m
[32m+[m[32m#!/usr/bin/env php[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32m/*[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m| Register The Auto Loader[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m|[m
[32m+[m[32m| Composer provides a convenient, automatically generated class loader[m
[32m+[m[32m| for our application. We just need to utilize it! We'll require it[m
[32m+[m[32m| into the script here so that we do not have to worry about the[m
[32m+[m[32m| loading of any our classes "manually". Feels great to relax.[m
[32m+[m[32m|[m
[32m+[m[32m*/[m
[32m+[m
[32m+[m[32mrequire __DIR__.'/bootstrap/autoload.php';[m
[32m+[m
[32m+[m[32m$app = require_once __DIR__.'/bootstrap/app.php';[m
[32m+[m
[32m+[m[32m/*[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m| Run The Artisan Application[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m|[m
[32m+[m[32m| When we run the console application, the current CLI command will be[m
[32m+[m[32m| executed in this console and the response sent back to a terminal[m
[32m+[m[32m| or another output device for the developers. Here goes nothing![m
[32m+[m[32m|[m
[32m+[m[32m*/[m
[32m+[m
[32m+[m[32m$kernel = $app->make('Illuminate\Contracts\Console\Kernel');[m
[32m+[m
[32m+[m[32m$status = $kernel->handle([m
[32m+[m	[32m$input = new Symfony\Component\Console\Input\ArgvInput,[m
[32m+[m	[32mnew Symfony\Component\Console\Output\ConsoleOutput[m
[32m+[m[32m);[m
[32m+[m
[32m+[m[32m/*[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m| Shutdown The Application[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m|[m
[32m+[m[32m| Once Artisan has finished running. We will fire off the shutdown events[m
[32m+[m[32m| so that any final work may be done by the application before we shut[m
[32m+[m[32m| down the process. This is the last thing to happen to the request.[m
[32m+[m[32m|[m
[32m+[m[32m*/[m
[32m+[m
[32m+[m[32m$kernel->terminate($input, $status);[m
[32m+[m
[32m+[m[32mexit($status);[m
[1mdiff --git a/bootstrap/app.php b/bootstrap/app.php[m
[1mnew file mode 100644[m
[1mindex 0000000..f50a3f7[m
[1m--- /dev/null[m
[1m+++ b/bootstrap/app.php[m
[36m@@ -0,0 +1,55 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32m/*[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m| Create The Application[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m|[m
[32m+[m[32m| The first thing we will do is create a new Laravel application instance[m
[32m+[m[32m| which serves as the "glue" for all the components of Laravel, and is[m
[32m+[m[32m| the IoC container for the system binding all of the various parts.[m
[32m+[m[32m|[m
[32m+[m[32m*/[m
[32m+[m
[32m+[m[32m$app = new Illuminate\Foundation\Application([m
[32m+[m	[32mrealpath(__DIR__.'/../')[m
[32m+[m[32m);[m
[32m+[m
[32m+[m[32m/*[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m| Bind Important Interfaces[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m|[m
[32m+[m[32m| Next, we need to bind some important interfaces into the container so[m
[32m+[m[32m| we will be able to resolve them when needed. The kernels serve the[m
[32m+[m[32m| incoming requests to this application from both the web and CLI.[m
[32m+[m[32m|[m
[32m+[m[32m*/[m
[32m+[m
[32m+[m[32m$app->singleton([m
[32m+[m	[32m'Illuminate\Contracts\Http\Kernel',[m
[32m+[m	[32m'App\Http\Kernel'[m
[32m+[m[32m);[m
[32m+[m
[32m+[m[32m$app->singleton([m
[32m+[m	[32m'Illuminate\Contracts\Console\Kernel',[m
[32m+[m	[32m'App\Console\Kernel'[m
[32m+[m[32m);[m
[32m+[m
[32m+[m[32m$app->singleton([m
[32m+[m	[32m'Illuminate\Contracts\Debug\ExceptionHandler',[m
[32m+[m	[32m'App\Exceptions\Handler'[m
[32m+[m[32m);[m
[32m+[m
[32m+[m[32m/*[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m| Return The Application[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m|[m
[32m+[m[32m| This script returns the application instance. The instance is given to[m
[32m+[m[32m| the calling script so we can separate the building of the instances[m
[32m+[m[32m| from the actual running of the application and sending responses.[m
[32m+[m[32m|[m
[32m+[m[32m*/[m
[32m+[m
[32m+[m[32mreturn $app;[m
[1mdiff --git a/bootstrap/autoload.php b/bootstrap/autoload.php[m
[1mnew file mode 100644[m
[1mindex 0000000..f2a9d56[m
[1m--- /dev/null[m
[1m+++ b/bootstrap/autoload.php[m
[36m@@ -0,0 +1,35 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mdefine('LARAVEL_START', microtime(true));[m
[32m+[m
[32m+[m[32m/*[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m| Register The Composer Auto Loader[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m|[m
[32m+[m[32m| Composer provides a convenient, automatically generated class loader[m
[32m+[m[32m| for our application. We just need to utilize it! We'll require it[m
[32m+[m[32m| into the script here so that we do not have to worry about the[m
[32m+[m[32m| loading of any our classes "manually". Feels great to relax.[m
[32m+[m[32m|[m
[32m+[m[32m*/[m
[32m+[m
[32m+[m[32mrequire __DIR__.'/../vendor/autoload.php';[m
[32m+[m
[32m+[m[32m/*[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m| Include The Compiled Class File[m
[32m+[m[32m|--------------------------------------------------------------------------[m
[32m+[m[32m|[m
[32m+[m[32m| To dramatically increase your application's performance, you may use a[m
[32m+[m[32m| compiled class file which contains all of the classes commonly used[m
[32m+[m[32m| by a request. The Artisan "optimize" is used to create this file.[m
[32m+[m[32m|[m
[32m+[m[32m*/[m
[32m+[m
[32m+[m[32m$compiledPath = __DIR__.'/../storage/framework/compiled.php';[m
[32m+[m
[32m+[m[32mif (file_exists($compiledPath))[m
[32m+[m[32m{[m
[32m+[m	[32mrequire $compiledPath;[m
[32m+[m[32m}[m
[1mdiff --git a/composer.json b/composer.json[m
[1mnew file mode 100644[m
[1mindex 0000000..dad7de6[m
[1m--- /dev/null[m
[1m+++ b/composer.json[m
[36m@@ -0,0 +1,45 @@[m
[32m+[m[32m{[m
[32m+[m	[32m"name": "laravel/laravel",[m
[32m+[m	[32m"description": "The Laravel Framework.",[m
[32m+[m	[32m"keywords": ["framework", "laravel"],[m
[32m+[m	[32m"license": "MIT",[m
[32m+[m	[32m"type": "project",[m
[32m+[m	[32m"require": {[m
[32m+[m		[32m"laravel/framework": "5.0.*",[m
[32m+[m		[32m"laravelcollective/html": "~5.0"[m
[32m+[m	[32m},[m
[32m+[m	[32m"require-dev": {[m
[32m+[m		[32m"phpunit/phpunit": "~4.0",[m
[32m+[m		[32m"phpspec/phpspec": "~2.1"[m
[32m+[m	[32m},[m
[32m+[m	[32m"autoload": {[m
[32m+[m		[32m"classmap": [[m
[32m+[m			[32m"database"[m
[32m+[m		[32m],[m
[32m+[m		[32m"psr-4": {[m
[32m+[m			[32m"App\\": "app/"[m
[32m+[m		[32m}[m
[32m+[m	[32m},[m
[32m+[m	[32m"autoload-dev": {[m
[32m+[m		[32m"classmap": [[m
[32m+[m			[32m"tests/TestCase.php"[m
[32m+[m		[32m][m
[32m+[m	[32m},[m
[32m+[m	[32m"scripts": {[m
[32m+[m		[32m"post-install-cmd": [[m
[32m+[m			[32m"php artisan clear-compiled",[m
[32m+[m			[32m"php artisan optimize"[m
[32m+[m		[32m],[m
[32m+[m		[32m"post-update-cmd": [[m
[32m+[m			[32m"php artisan clear-compiled",[m
[32m+[m			[32m"php artisan optimize"[m
[32m+[m		[32m],[m
[32m+[m		[32m"post-create-project-cmd": [[m
[32m+[m			[32m"php -r \"copy('.env.example', '.env');\"",[m
[32m+[m			[32m"php artisan key:generate"[m
[32m+[m		[32m][m
[32m+[m	[32m},[m
[32m+[m	[32m"config": {[m
[32m+[m		[32m"preferred-install": "dist"[m
[32m+[m	[32m}[m
[32m+[m[32m}[m
[1mdiff --git a/composer.lock b/composer.lock[m
[1mnew file mode 100644[m
[1mindex 0000000..a9eb2f6[m
[1m--- /dev/null[m
[1m+++ b/composer.lock[m
[36m@@ -0,0 +1,3036 @@[m
[32m+[m[32m{[m
[32m+[m[32m    "_readme": [[m
[32m+[m[32m        "This file locks the dependencies of your project to a known state",[m
[32m+[m[32m        "Read more about it at https://getcomposer.org/doc/01-basic-usage.md#composer-lock-the-lock-file",[m
[32m+[m[32m        "This file is @generated automatically"[m
[32m+[m[32m    ],[m
[32m+[m[32m    "hash": "fbb4f67c55562784b02d6b864d8a7966",[m
[32m+[m[32m    "content-hash": "7bb9424ec378f6daa6518ee1304ae65d",[m
[32m+[m[32m    "packages": [[m
[32m+[m[32m        {[m
[32m+[m[32m            "name": "classpreloader/classpreloader",[m
[32m+[m[32m            "version": "1.4.0",[m
[32m+[m[32m            "source": {[m
[32m+[m[32m                "type": "git",[m
[32m+[m[32m                "url": "https://github.com/ClassPreloader/ClassPreloader.git",[m
[32m+[m[32m                "reference": "b76f3f4f603ebbe7e64351a7ef973431ddaf7b27"[m
[32m+[m[32m            },[m
[32m+[m[32m            "dist": {[m
[32m+[m[32m                "type": "zip",[m
[32m+[m[32m                "url": "https://api.github.com/repos/ClassPreloader/ClassPreloader/zipball/b76f3f4f603ebbe7e64351a7ef973431ddaf7b27",[m
[32m+[m[32m                "reference": "b76f3f4f603ebbe7e64351a7ef973431ddaf7b27",[m
[32m+[m[32m                "shasum": ""[m
[32m+[m[32m            },[m
[32m+[m[32m            "require": {[m
[32m+[m[32m                "nikic/php-parser": "~1.3",[m
[32m+[m[32m                "php": ">=5.3.3",[m
[32m+[m[32m                "symfony/console": "~2.1",[m
[32m+[m[32m                "symfony/filesystem": "~2.1",[m
[32m+[m[32m                "symfony/finder": "~2.1"[m
[32m+[m[32m            },[m
[32m+[m[32m            "require-dev": {[m
[32m+[m[32m                "phpunit/phpunit": "~4.0"[m
[32m+[m[32m            },[m
[32m+[m[32m            "bin": [[m
[32m+[m[32m                "classpreloader.php"[m
[32m+[m[32m            ],[m
[32m+[m[32m            "type": "library",[m
[32m+[m[32m            "extra": {[m
[32m+[m[32m                "branch-alias": {[m
[32m+[m[32m                    "dev-master": "1.4-dev"[m
[32m+[m[32m                }[m
[32m+[m[32m            },[m
[32m+[m[32m            "autoload": {[m
[32m+[m[32m                "psr-4": {[m
[32m+[m[32m                    "ClassPreloader\\": "src/"[m
[32m+[m[32m                }[m
[32m+[m[32m            },[m
[32m+[m[32m            "notification-url": "https://packagist.org/downloads/",[m
[32m+[m[32m            "license": [[m
[32m+[m[32m                "MIT"[m
[32m+[m[32m            ],[m
[32m+[m[32m            "authors": [[m
[32m+[m[32m                {[m
[32m+[m[32m                    "name": "Michael Dowling",[m
[32m+[m[32m                    "email": "mtdowling@gmail.com"[m
[32m+[m[32m                },[m
[32m+[m[32m                {[m
[32m+[m[32m                    "name": "Graham Campbell",[m
[32m+[m[32m                    "email": "graham@cachethq.io"[m
[32m+[m[32m                }[m
[32m+[m[32m            ],[m
[32m+[m[32m            "description": "Helps class loading performance by generating a single PHP file containing all of the autoloaded files for a specific use case",[m
[32m+[m[32m            "keywords": [[m
[32m+[m[32m                "autoload",[m
[32m+[m[32m                "class",[m
[32m+[m[32m                "preload"[m
[32m+[m[32m            ],[m
[32m+[m[32m            "time": "2015-05-26 10:57:51"[m
[32m+[m[32m        },[m
[32m+[m[32m        {[m
[32m+[m[32m            "name": "danielstjules/stringy",[m
[32m+[m[32m            "version": "1.10.0",[m
[32m+[m[32m            "source": {[m
[32m+[m[32m                "type": "git",[m
[32m+[m[32m                "url": "https://github.com/danielstjules/Stringy.git",[m
[32m+[m[32m                "reference": "4749c205db47ee5b32e8d1adf6d9aff8db6caf3b"[m
[32m+[m[32m            },[m
[32m+[m[32m            "dist": {[m
[32m+[m[32m                "type": "zip",[m
[32m+[m[32m                "url": "https://api.github.com/repos/danielstjules/Stringy/zipball/4749c205db47ee5b32e8d1adf6d9aff8db6caf3b",[m
[32m+[m[32m                "reference": "4749c205db47ee5b32e8d1adf6d9aff8db6caf3b",[m
[32m+[m[32m                "shasum": ""[m
[32m+[m[32m            },[m
[32m+[m[32m            "require": {[m
[32m+[m[32m                "ext-mbstring": "*",[m
[32m+[m[32m                "php": ">=5.3.0"[m
[32m+[m[32m            },[m
[32m+[m[32m            "require-dev": {[m
[32m+[m[32m                "phpunit/phpunit": "~4.0"[m
[32m+[m[32m            },[m
[32m+[m[32m            "type": "library",[m
[32m+[m[32m            "autoload": {[m
[32m+[m[32m                "psr-4": {[m
[32m+[m[32m                    "Stringy\\": "src/"[m
[32m+[m[32m                },[m
[32m+[m[32m                "files": [[m
[32m+[m[32m                    "src/Create.php"[m
[32m+[m[32m                ][m
[32m+[m[32m            },[m
[32m+[m[32m            "notification-url": "https://packagist.org/downloads/",[m
[32m+[m[32m            "license": [[m
[32m+[m[32m                "MIT"[m
[32m+[m[32m            ],[m
[32m+[m[32m            "authors": [[m
[32m+[m[32m                {[m
[32m+[m[32m                    "name": "Daniel St. Jules",[m
[32m+[m[32m                    "email": "danielst.jules@gmail.com",[m
[32m+[m[32m                    "homepage": "http://www.danielstjules.com"[m
[32m+[m[32m                }[m
[32m+[m[32m            ],[m
[32m+[m[32m            "description": "A string manipulation library with multibyte support",[m
[32m+[m[32m            "homepage": "https://github.com/danielstjules/Stringy",[m
[32m+[m[32m            "keywords": [[m
[32m+[m[32m                "UTF",[m
[32m+[m[32m                "helpers",[m
[32m+[m[32m                "manipulation",[m
[32m+[m[32m                "methods",[m
[32m+[m[32m                "multibyte",[m
[32m+[m[32m                "string",[m
[32m+[m[32m                "utf-8",[m
[32m+[m[32m                "utility",[m
[32m+[m[32m                "utils"[m
[32m+[m[32m            ],[m
[32m+[m[32m            "time": "2015-07-23 00:54:12"[m
[32m+[m[32m        },[m
[32m+[m[32m        {[m
[32m+[m[32m            "name": "dnoegel/php-xdg-base-dir",[m
[32m+[m[32m            "version": "0.1",[m
[32m+[m[32m            "source": {[m
[32m+[m[32m                "type": "git",[m
[32m+[m[32m                "url": "https://github.com/dnoegel/php-xdg-base-dir.git",[m
[32m+[m[32m                "reference": "265b8593498b997dc2d31e75b89f053b5cc9621a"[m
[32m+[m[32m            },[m
[32m+[m[32m            "dist": {[m
[32m+[m[32m                "type": "zip",[m
[32m+[m[32m                "url": "https://api.github.com/repos/dnoegel/php-xdg-base-dir/zipball/265b8593498b997dc2d31e75b89f053b5cc9621a",[m
[32m+[m[32m                "reference": "265b8593498b997dc2d31e75b89f053b5cc9621a",[m
[32m+[m[32m                "shasum": ""[m
[32m+[m[32m            },[m
[32m+[m[32m            "require": {[m
[32m+[m[32m                "php": ">=5.3.2"[m
[32m+[m[32m            },[m
[32m+[m[32m            "require-dev": {[m
[32m+[m[32m                "phpunit/phpunit": "@stable"[m
[32m+[m[32m            },[m
[32m+[m[32m            "type": "project",[m
[32m+[m[32m            "autoload": {[m
[32m+[m[32m                "psr-4": {[m
[32m+[m[32m                    "XdgBaseDir\\": "src/"[m
[32m+[m[32m                }[m
[32m+[m[32m            },[m
[32m+[m[32m            "notification-url": "https://packagist.org/downloads/",[m
[32m+[m[32m            "license": [[m
[32m+[m[32m                "MIT"[m
[32m+[m[32m            ],[m
[32m+[m[32m            "description": "implementation of xdg base directory specification for php",[m
[32m+[m[32m            "time": "2014-10-24 07:27:01"[m
[32m+[m[32m        },[m
[32m+[m[32m        {[m
[32m+[m[32m            "name": "doctrine/inflector",[m
[32m+[m[32m            "version": "v1.1.0",[m
[32m+[m[32m            "source": {[m
[32m+[m[32m                "type": "git",[m
[32m+[m[32m                "url": "https://github.com/doctrine/inflector.git",[m
[32m+[m[32m                "reference": "90b2128806bfde671b6952ab8bea493942c1fdae"[m
[32m+[m[32m            },[m
[32m+[m[32m            "dist": {[m
[32m+[m[32m                "type": "zip",[m
[32m+[m[32m                "url": "https://api.github.com/repos/doctrine/inflector/zipball/90b2128806bfde671b6952ab8bea493942c1fdae",[m
[32m+[m[32m                "reference": "90b2128806bfde671b6952ab8bea493942c1fdae",[m
[32m+[m[32m                "shasum": ""[m
[32m+[m[32m            },[m
[32m+[m[32m            "require": {[m
[32m+[m[32m                "php": ">=5.3.2"[m
[32m+[m[32m            },[m
[32m+[m[32m            "require-dev": {[m
[32m+[m[32m                "phpunit/phpunit": "4.*"[m
[32m+[m[32m            },[m
[32m+[m[32m            "type": "library",[m
[32m+[m[32m            "extra": {[m
[32m+[m[32m                "branch-alias": {[m
[32m+[m[32m                    "dev-master": "1.1.x-dev"[m
[32m+[m[32m                }[m
[32m+[m[32m            },[m
[32m+[m[32m            "autoload": {[m
[32m+[m[32m                "psr-0": {[m
[32m+[m[32m                    "Doctrine\\Common\\Inflector\\": "lib/"[m
[32m+[m[32m                }[m
[32m+[m[32m            },[m
[32m+[m[32m            "notification-url": "https://packagist.org/downloads/",[m
[32m+[m[32m            "license": [[m
[32m+[m[32m                "MIT"[m
[32m+[m[32m            ],[m
[32m+[m[32m            "authors": [[m
[32m+[m[32m                {[m
[32m+[m[32m                    "name": "Roman Borschel",[m
[32m+[m[32m                    "email": "roman@code-factory.org"[m
[32m+[m[32m                },[m
[32m+[m[32m                {[m
[32m+[m[32m                    "name": "Benjamin Eberlei",[m
[32m+[m[32m                    "email": "kontakt@beberlei.de"[m
[32m+[m[32m                },[m
[32m+[m[32m                {[m
[32m+[m[32m                    "name": "Guilherme Blanco",[m
[32m+[m[32m                    "email": "guilhermeblanco@gmail.com"[m
[32m+[m[32m                },[m
[32m+[m[32m                {[m
[32m+[m[32m                    "name": "Jonathan Wage",[m
[32m+[m[32m                    "email": "jonwage@gmail.com"[m
[32m+[m[32m                },[m
[32m+[m[32m                {[m
[32m+[m[32m                    "name": "Johannes Schmitt",[m
[32m+[m[32m                    "email": "schmittjoh@gmail.com"[m
[32m+[m[32m                }[m
[32m+[m[32m            ],[m
[32m+[m[32m            "description": "Common String Manipulations with regard to casing and singular/plural rules.",[m
[32m+[m[32m            "homepage": "http://www.doctrine-project.org",[m
[32m+[m[32m            "keywords": [[m
[32m+[m[32m                "inflection",[m
[32m+[m[32m                "pluralize",[m
[32m+[m[32m                "singularize",[m
[32m+[m[32m                "string"[m
[32m+[m[32m            ],[m
[32m+[m[32m            "time": "2015-11-06 14:35:42"[m
[32m+[m[32m        },[m
[32m+[m[32m        {[m
[32m+[m[32m            "name": "ircmaxell/password-compat",[m
[32m+[m[32m            "version": "v1.0.4",[m
[32m+[m[32m            "source": {[m
[32m+[m[32m                "type": "git",[m
[32m+[m[32m                "url": "https://github.com/ircmaxell/password_compat.git",[m
[32m+[m[32m                "reference": "5c5cde8822a69545767f7c7f3058cb15ff84614c"[m
[32m+[m[32m            },[m
[32m+[m[32m            "dist": {[m
[32m+[m[32m                "type": "zip",[m
[32m+[m[32m                "url": "https://api.github.com/repos/ircmaxell/password_compat/zipball/5c5cde8822a69545767f7c7f3058cb15ff84614c",[m
[32m+[m[32m                "reference": "5c5cde8822a69545767f7c7f3058cb15ff84614c",[m
[32m+[m[32m                "shasum": ""[m
[32m+[m[32m            },[m
[32m+[m[32m            "require-dev": {[m
[32m+[m[32m                "phpunit/phpunit": "4.*"[m
[32m+[m[32m            },[m
[32m+[m[32m            "type": "library",[m
[32m+[m[32m            "autoload": {[m
[32m+[m[32m                "files": [[m
[32m+[m[32m                    "lib/password.php"[m
[32m+[m[32m                ][m
[32m+[m[32m            },[m
[32m+[m[32m            "notification-url": "https://packagist.org/downloads/",[m
[32m+[m[32m            "license": [[m
[32m+[m[32m                "MIT"[m
[32m+[m[32m            ],[m
[32m+[m[32m            "authors": [[m
[32m+[m[32m                {[m
[32m+[m[32m                    "name": "Anthony Ferrara",[m
[32m+[m[32m                    "email": "ircmaxell@php.net",[m
[32m+[m[32m                    "homepage": "http://blog.ircmaxell.com"[m
[32m+[m[32m                }[m
[32m+[m[32m            ],[m
[32m+[m[32m            "description": "A compatibility library for the proposed simplified password hashing algorithm: https://wiki.php.net/rfc/password_hash",[m
[32m+[m[32m            "homepage": "https://github.com/ircmaxell/password_compat",[m
[32m+[m[32m            "keywords": [[m
[32m+[m[32m                "hashing",[m
[32m+[m[32m                "password"[m
[32m+[m[32m            ],[m
[32m+[m[32m            "time": "2014-11-20 16:49:30"[m
[32m+[m[32m        },[m
[32m+[m[32m        {[m
[32m+[m[32m            "name": "jakub-onderka/php-console-color",[m
[32m+[m[32m            "version": "0.1",[m
[32m+[m[32m            "source": {[m
[32m+[m[32m                "type": "git",[m
[32m+[m[32m                "url": "https://github.com/JakubOnderka/PHP-Console-Color.git",[m
[32m+[m[32m                "reference": "e0b393dacf7703fc36a4efc3df1435485197e6c1"[m
[32m+[m[32m            },[m
[32m+[m[32m            "dist": {[m
[32m+[m[32m                "type": "zip",[m
[32m+[m[32m                "url": "https://api.github.com/repos/JakubOnderka/PHP-Console-Color/zipball/e0b393dacf7703fc36a4efc3df1435485197e6c1",[m
[32m+[m[32m                "reference": "e0b393dacf7703fc36a4efc3df1435485197e6c1",[m
[32m+[m[32m                "shasum": ""[m
[32m+[m[32m            },[m
[32m+[m[32m            "require": {[m
[32m+[m[32m                "php": ">=5.3.2"[m
[32m+[m[32m            },[m
[32m+[m[32m            "require-dev": {[m
[32m+[m[32m                "jakub-onderka/php-code-style": "1.0",[m
[32m+[m[32m                "jakub-onderka/php-parallel-lint": "0.*",[m
[32m+[m[32m                "jakub-onderka/php-var-dump-check": "0.*",[m
[32m+[m[32m                "phpunit/phpunit": "3.7.*",[m
[32m+[m[32m                "squizlabs/php_codesniffer": "1.*"[m
[32m+[m[32m            },[m
[32m+[m[32m            "type": "library",[m
[32m+[m[32m            "autoload": {[m
[32m+[m[32m                "psr-0": {[m
[32m+[m[32m                    "JakubOnderka\\PhpConsoleColor": "src/"[m
[32m+[m[32m                }[m
[32m+[m[32m            },[m
[32m+[m[32m            "notification-url": "https://packagist.org/downloads/",[m
[32m+[m[32m            "license": [[m
[32m+[m[32m                "BSD-2-Clause"[m
[32m+[m[32m            ],[m
[32m+[m[32m            "authors": [[m
[32m+[m[32m                {[m
[32m+[m[32m                    "name": "Jakub Onderka",[m
[32m+[m[32m                    "email": "jakub.onderka@gmail.com",[m
[32m+[m[32m                    "homepage": "http://www.acci.cz"[m
[32m+[m[32m                }[m
[32m+[m[32m            ],[m
[32m+[m[32m            "time": "2014-04-08 15:00:19"[m
[32m+[m[32m        },[m
[32m+[m[32m        {[m
[32m+[m[32m            "name": "jakub-onderka/php-console-highlighter",[m
[32m+[m[32m            "version": "v0.3.2",[m
[32m+[m[32m            "source": {[m
[32m+[m[32m                "type": "git",[m
[32m+[m[32m                "url": "https://github.com/JakubOnderka/PHP-Console-Highlighter.git",[m
[32m+[m[32m                "reference": "7daa75df45242c8d5b75a22c00a201e7954e4fb5"[m
[32m+[m[32m            },[m
[32m+[m[32m            "dist": {[m
[32m+[m[32m                "type": "zip",[m
[32m+[m[32m                "url": "https://api.github.com/repos/JakubOnderka/PHP-Console-Highlighter/zipball/7daa75df45242c8d5b75a22c00a201e7954e4fb5",[m
[32m+[m[32m                "reference": "7daa75df45242c8d5b75a22c00a201e7954e4fb5",[m
[32m+[m[32m                "shasum": ""[m
[32m+[m[32m            },[m
[32m+[m[32m            "require": {[m
[32m+[m[32m                "jakub-onderka/php-console-color": "~0.1",[m
[32m+[m[32m                "php": ">=5.3.0"[m
[32m+[m[32m            },[m
[32m+[m[32m            "require-dev": {[m
[32m+[m[32m                "jakub-onderka/php-code-style": "~1.0",[m
[32m+[m[32m                "jakub-onderka/php-parallel-lint": "~0.5",[m
[32m+[m[32m                "jakub-onderka/php-var-dump-check": "~0.1",[m
[32m+[m[32m                "phpunit/phpunit": "~4.0",[m
[32m+[m[32m                "squizlabs/php_codesniffer": "~1.5"[m
[32m+[m[32m            },[m
[32m+[m[32m            "type": "library",[m
[32m+[m[32m            "autoload": {[m
[32m+[m[32m                "psr-0": {[m
[32m+[m[32m                    "JakubOnderka\\PhpConsoleHighlighter": "src/"[m
[32m+[m[32m                }[m
[32m+[m[32m            },[m
[32m+[m[32m            "notification-url": "https://packagist.org/downloads/",[m
[32m+[m[32m            "license": [[m
[32m+[m[32m                "MIT"[m
[32m+[m[32m            ],[m
[32m+[m[32m            "authors": [[m
[32m+[m[32m                {[m
[32m+[m[32m                    "name": "Jakub Onderka",[m
[32m+[m[32m                    "email": "acci@acci.cz",[m
[32m+[m[32m                    "homepage": "http://www.acci.cz/"[m
[32m+[m[32m                }[m
[32m+[m[32m            ],[m
[32m+[m[32m            "time": "2015-04-20 18:58:01"[m
[32m+[m[32m        },[m
[32m+[m[32m        {[m
[32m+[m[32m            "name": "jeremeamia/SuperClosure",[m
[32m+[m[32m            "version": "2.2.0",[m
[32m+[m[32m            "source": {[m
[32m+[m[32m                "type": "git",[m
[32m+[m[32m                "url": "https://github.com/jeremeamia/super_closure.git",[m
[32m+[m[32m                "reference": "29a88be2a4846d27c1613aed0c9071dfad7b5938"[m
[32m+[m[32m            },[m
[32m+[m[32m            "dist": {[m
[32m+[m[32m                "type": "zip",[m
[32m+[m[32m                "url": "https://api.github.com/repos/jeremeamia/super_closure/zipball/29a88be2a4846d27c1613aed0c9071dfad7b5938",[m
[32m+[m[32m                "reference": "29a88be2a4846d27c1613aed0c9071dfad7b5938",[m
[32m+[m[32m                "shasum": ""[m
[32m+[m[32m            },[m
[32m+[m[32m            "require": {[m
[32m+[m[32m                "nikic/php-parser": "^1.2|^2.0",[m
[32m+[m[32m                "php": ">=5.4",[m
[32m+[m[32m                "symfony/polyfill-php56": "^1.0"[m
[32m+[m[32m            },[m
[32m+[m[32m            "require-dev": {[m
[32m+[m[32m                "phpunit/phpunit": "^4.0|^5.0"[m
[32m+[m[32m            },[m
[32m+[m[32m            "type": "library",[m
[32m+[m[32m            "extra": {[m
[32m+[m[32m                "branch-alias": {[m
[32m+[m[32m                    "dev-master": "2.2-dev"[m
[32m+[m[32m                }[m
[32m+[m[32m            },[m
[32m+[m[32m            "autoload": {[m
[32m+[m[32m                "psr-4": {[m
[32m+[m[32m                    "SuperClosure\\": "src/"[m
[32m+[m[32m                }[m
[32m+[m[32m            },[m
[32m+[m[32m            "notification-url": "https://packagist.org/downloads/",[m
[32m+[m[32m            "license": [[m
[32m+[m[32m                "MIT"[m
[32m+[m[32m            ],[m
[32m+[m[32m            "authors": [[m
[32m+[m[32m                {[m
[32m+[m[32m                    "name": "Jeremy Lindblom",[m
[32m+[m[32m                    "email": "jeremeamia@gmail.com",[m
[32m+[m[32m                    "homepage": "https://github.com/jeremeamia",[m
[32m+[m[32m                    "role": "Developer"[m
[32m+[m[32m                }[m
[32m+[m[32m            ],[m
[32m+[m[32m            "description": "Serialize Closure objects, including their context and binding",[m
[32m+[m[32m            "homepage": "https://github.com/jeremeamia/super_closure",[m
[32m+[m[32m            "keywords": [[m
[32m+[m[32m                "closure",[m
[32m+[m[32m                "function",[m
[32m+[m[32m                "lambda",[m
[32m+[m[32m                "parser",[m
[32m+[m[32m                "serializable",[m
[32m+[m[32m                "serialize",[m
[32m+[m[32m                "tokenizer"[m
[32m+[m[32m            ],[m
[32m+[m[32m            "time": "2015-12-05 17:17:57"[m
[32m+[m[32m        },[m
[32m+[m[32m        {[m
[32m+[m[32m            "name": "laravel/framework",[m
[32m+[m[32m            "version": "v5.0.34",[m
[32m+[m[32m            "source": {[m
[32m+[m[32m                "type": "git",[m
[32m+[m[32m                "url": "https://github.com/laravel/framework.git",[m
[32m+[m[32m                "reference": "98dbaafe8e2781f86b1b858f8610be0d7318b153"[m
[32m+[m[32m            },[m
[32m+[m[32m            "dist": {[m
[32m+[m[32m                "type": "zip",[m
[32m+[m[32m                "url": "https://api.github.com/repos/laravel/framework/zipball/98dbaafe8e2781f86b1b858f8610be0d7318b153",[m
[32m+[m[32m                "reference": "98dbaafe8e2781f86b1b858f8610be0d7318b153",[m
[32m+[m[32m                "shasum": ""[m
[32m+[m[32m            },[m
[32m+[m[32m            "require": {[m
[32m+[m[32m                "classpreloader/classpreloader": "~1.2",[m
[32m+[m[32m                "danielstjules/stringy": "~1.8",[m
[32m+[m[32m                "doctrine/inflector": "~1.0",[m
[32m+[m[32m                "ext-mbstring": "*",[m
[32m+[m[32m                "ext-mcrypt": "*",[m
[32m+[m[32m                "ext-openssl": "*",[m
[32m+[m[32m                "ircmaxell/password-compat": "~1.0",[m
[32m+[m[32m                "jeremeamia/superclosure": "~2.0",[m
[32m+[m[32m                "league/flysystem": "~1.0",[m
[32m+[m[32m                "monolog/monolog": "~1.11",[m
[32m+[m[32m                "mtdowling/cron-expression": "~1.0",[m
[32m+[m[32m                "nesbot/carbon": "~1.0",[m
[32m+[m[32m                "php": ">=5.4.0",[m
[32m+[m[32m                "psy/psysh": "0.4.*",[m
[32m+[m[32m                "swiftmailer/swiftmailer": "~5.1",[m
[32m+[m[32m                "symfony/console": "2.6.*",[m
[32m+[m[32m                "symfony/debug": "2.6.*",[m
[32m+[m[32m                "symfony/finder": "2.6.*",[m
[32m+[m[32m                "symfony/http-foundation": "2.6.*",[m
[32m+[m[32m                "symfony/http-kernel": "2.6.*",[m
[32m+[m[32m                "symfony/process": "2.6.*",[m
[32m+[m[32m                "symfony/routing": "2.6.*",[m
[32m+[m[32m                "symfony/security-core": "2.6.*",[m
[32m+[m[32m                "symfony/translation": "2.6.*",[m
[32m+[m[32m                "symfony/var-dumper": "2.6.*",[m
[32m+[m[32m                "vlucas/phpdotenv": "~1.0"[m
[32m+[m[32m            },[m
[32m+[m[32m            "replace": {[m
[32m+[m[32m                "illuminate/auth": "self.version",[m
[32m+[m[32m                "illuminate/bus": "self.version",[m
[32m+[m[32m                "illuminate/cache": "self.version",[m
[32m+[m[32m                "illuminate/config": "self.version",[m
[32m+[m[32m                "illuminate/console": "self.version",[m
[32m+[m[32m                "illuminate/container": "self.version",[m
[32m+[m[32m                "illuminate/contracts": "self.version",[m
[32m+[m[32m                "illuminate/cookie": "self.version",[m
[32m+[m[32m                "illuminate/database": "self.version",[m
[32m+[m[32m                "illuminate/encryption": "self.version",[m
[32m+[m[32m                "illuminate/events": "self.version",[m
[32m+[m[32m                "illuminate/exception": "self.version",[m
[32m+[m[32m                "illuminate/filesystem": "self.version",[m
[32m+[m[32m                "illuminate/foundation": "self.version",[m
[32m+[m[32m                "illuminate/hashing": "self.version",[m
[32m+[m[32m                "illuminate/http": "self.version",[m
[32m+[m[32m                "illuminate/log": "self.version",[m
[32m+[m[32m                "illuminate/mail": "self.version",[m
[32m+[m[32m                "illuminate/pagination": "self.version",[m
[32m+[m[32m                "illuminate/pipeline": "s